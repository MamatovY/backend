const TelegramApi = require('node-telegram-bot-api')
const token = '5674163350:AAHMp8eQKPFmE6YaScR5r96gVhrb4-8CACU'
const bot = new TelegramApi(token, { polling: true })



const { gameOptions, again } = require('./options')
const Sequelize = require('./db')


const chats = {}


const startGame = async (chatId) => {
    await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã —É–≥–∞–¥–∞–π`)
    const randomNum = Math.floor(Math.random() * 10)
    chats[chatId] = randomNum
    await bot.sendMessage(chatId, `–ï—Å–ª–∏ —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ${chats[chatId]}`, gameOptions)
}






bot.setMyCommands([
    { command: '/start', description: '–ù–∞—á–∞–ª–æ' },
    { command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' },
    { command: '/game', description: '–ò–≥—Ä–∞ —É–≥–∞–¥–∞–π —Ü–∏—Ñ—Ä—É' }
])






const start = async () => {

    try {
        await Sequelize.authenticate()
        await Sequelize.sync()
    } catch (e) {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–æ–º–∞–ª–æ—Å—å', e);
    }












    bot.on('message', async msg => {
        const chatId = msg.chat.id
        const text = msg.text

        console.log(msg)


        if (text === '/start') {
            await bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å`)
            return bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/ea5/382/ea53826d-c192-376a-b766-e5abc535f1c9/7.webp')
        }



        if (text === '/info') {
            const fname = msg.from.first_name
            const lname = msg.from.last_name
            return bot.sendMessage(chatId, `
    –¢–≤–æ–µ –∏–º—è:  ${fname}
    –§–∞–º–∏–ª–∏—è: ${lname}
            `)
        }



        if (text === '/game') {
            return startGame(chatId)
        }

        if (text.toUpperCase() === '–ö–ê–ô–§') {
            await bot.sendMessage(chatId, `üèÜ`)

            return bot.sendMessage(chatId, `–ö—Ä–∞—Å–∞–≤—á–∏–∫ –º—ã–Ω—á–∞ –∫—É—á—Ç—É—É—Å—É–Ω`)
        }

        return bot.sendMessage(chatId, `–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª: ${text}`)

    })








    bot.on('callback_query', async msg => {
        const data = msg.data
        const chatId = msg.message.chat.id

        if (data == '/again') {
            return startGame(chatId)
        } else if (data == chats[chatId]) {
            return await bot.sendMessage(chatId, `–¢—ã —É–≥–∞–¥–∞–ª! ${data}
–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?`, again)
        } else {
            await bot.sendMessage(chatId, `${data} - –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π...`)
        }

    })



}

start()






