const TelegramApi = require('node-telegram-bot-api')
const token = '5663843077:AAEOSX8Y9kGGxWJxKevo3ctUMVFP7sgkSWY'

const bot = new TelegramApi(token, { polling: true })




const { gameOptions, again } = require('./options')
const sequelize = require('./db.js')
const UserModel = require('./query.js')




const chats = {}


const startGame = async (chatId, fromId) => {
    await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã —É–≥–∞–¥–∞–π`)
    const randomNum = Math.floor(Math.random() * 10)
    chats[fromId] = randomNum
    await bot.sendMessage(chatId, `–ï—Å–ª–∏ —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ${chats[fromId]}`, gameOptions)
}






bot.setMyCommands([
    { command: '/start', description: '–ù–∞—á–∞–ª–æ' },
    { command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' },
    { command: '/game', description: '–ò–≥—Ä–∞ —É–≥–∞–¥–∞–π —Ü–∏—Ñ—Ä—É' },
    { command: '/reset', description: '–û–±–Ω—É–ª–∏—Ç—å —Å—á–µ—Ç—á–∏–∫' }
])






const start = async () => {


    try {
        await sequelize.authenticate()
        await sequelize.sync()

    } catch (error) {
        console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–æ–º–∞–ª–æ—Å—å', error);
    }











    bot.on('message', async msg => {
        const chatId = msg.chat.id
        const text = msg.text ? msg.text.replace('@YomaM01_bot', '') : false
        const fromId = msg.from.id
        const img = msg.photo ? msg.photo[0].file_id : false
        console.log('AA' + fromId + 'AA' + text);
        console.log(msg)



        try {
            if (text) {
                if (text === '/start') {
                    const user = await UserModel.findOne({ fromId }) ? UserModel.findOne({ fromId }) : false
                    if (!user) {
                        await bot.sendMessage(chatId, 'Bd create')
                        await UserModel.create({ fromId })
                    }
                    await bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å`)
                    return bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/ea5/382/ea53826d-c192-376a-b766-e5abc535f1c9/7.webp')
                }



                if (text === '/info') {
                    const fname = msg.from.first_name
                    const lname = msg.from.last_name

                    const user = await UserModel.findOne({ fromId })

                    return bot.sendMessage(chatId, `
            –¢–≤–æ–µ –∏–º—è:  ${fname} ${lname ? lname : ''}
–í –∏–≥—Ä–µ —É —Ç–µ–±—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${user.right}
–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: ${user.wrong}
Id: ${user.fromId}
`)
                }




                if (text === '/game') {
                    return startGame(chatId, fromId)
                }

                if (text === '/reset') {
                    const user = await UserModel.findOne({ fromId })
                    user.right = 0
                    user.wrong = 0
                    await user.save()
                    return bot.sendMessage(chatId, `–°—á–µ—Ç—á–∏–∫ –æ–±–Ω—É–ª–∏–ª—Å—è`)

                }



                if (text.toUpperCase() === '–ö–ê–ô–§') {
                    await bot.sendMessage(chatId, `üèÜ`)
                    return bot.sendMessage(chatId, `–ö—Ä–∞—Å–∞–≤—á–∏–∫ –º—ã–Ω—á–∞ –∫—É—á—Ç—É—É—Å—É–Ω`)
                }

                if (msg.chat.type === 'group') {
                    await bot.sendMessage(fromId, `–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª: ${text} `)
                }


                return bot.sendMessage(chatId, `–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª: ${text} `)
            }

            if (img) {

                return bot.sendPhoto(chatId, img)
            }


        } catch (e) {
            return bot.sendMessage(chatId, `–ß—Ç–æ - —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫`)
        }











    })








    bot.on('callback_query', async msg => {
        const data = msg.data
        const chatId = msg.message.chat.id
        const fromId = msg.from.id

        if (data == '/again') {
            return startGame(chatId, fromId)
        }

        const user = await UserModel.findOne({ fromId })

        if (data == chats[fromId]) {
            user.right += 1

            await bot.sendMessage(chatId, `–¢—ã —É–≥–∞–¥–∞–ª! ${data}
–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑ ? `, again)

        } else {
            user.wrong += 1
            await bot.sendMessage(chatId, `${data} - –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π...`)
        }
        await user.save()
    })



}

start()






